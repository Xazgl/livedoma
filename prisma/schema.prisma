// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ObjectIntrum {
  id                String   @id @default(cuid())
  id_intrum         String   @unique
  category          String // категория  - Квартиры, дома и тп 
  operationType     String // тип продам 
  state             String? // Область
  city              String? // Волгоград или Волжский
  street            String? // улица и номер дома 
  price             Float? // цена
  companyName       String //АН Живем дома или какая то другая 
  managerName       String?
  description       String? //Описание
  balconyOrLoggia   String? //Значение будет Балкон или Лоджия
  passengerElevator String? //Пассажирский лифт кол-во или нет
  freightElevator   String? //Грузовой лифт  кол-во или нет
  ceilingHeight     String? //ВЫсота потолков
  renovation        String? //Ремонт косметический или еще какой-то
  bathroomMulti     String? //Ванна раздельная с туалетом или нет
  dealType          String? //Тип сделки
  roomType          String[] //Тип комнат
  saleOptions       String[] //Опции продажи , например можно в Ипотеку
  phone             String? //Контактный телефон
  img               String[] //Фото квартиры 
  rooms             String? //Кол-во комнат
  square            String? //Площадь
  landArea          String? //Земельный участок
  floors            String? //Этажей
  floor             String? // Этаж если квартира или офис
  wallsType         String? //тип стен дома
  propertyRights    String? //Право собственности 
  transactionType   String?
  objectType        String?

  //Если дом
  houseServices   String[] // отопления, газ и Электричество
  cadastralNumber String? // кадастровый номер

  //Для коммерческой

  parkingType         String?
  rentalType          String?
  decoration          String?
  leaseCommissionSize String?
  leaseDeposit        String?

  FavoriteObjectsToObj FavoriteObjectsToObj[]
  active               Boolean                @default(true)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
}

model SessionClient {
  id              String                 @id @default(cuid())
  sessionToken    String                 @unique
  expires         DateTime
  favoriteObjects FavoriteObjectsToObj[]
  createdAt       DateTime               @default(now())
  updatedAt       DateTime               @updatedAt
}

model FavoriteObjectsToObj {
  session   SessionClient @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId String
  object    ObjectIntrum  @relation(fields: [objectId], references: [id], onDelete: Cascade)
  objectId  String

  @@id([sessionId, objectId])
}

model ExchangeRate {
  id        String   @id @default(cuid())
  name      String
  value     String
  nominal   String
  charCode  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Wazzup {
  id        String  @id @default(cuid())
  name      String?
  phone     String
  text      String?
  typeSend  String?
  sendCrm   Boolean
  managerId String?

  intrumId    String?
  intrumUrl   String?
  timeCall    String?
  ok_cz       Boolean? @default(false)
  timeManager String?
  ok_manager  Boolean? @default(false)
  status      String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tilda {
  id           String  @id @default(cuid())
  name         String?
  phone        String
  typeSend     String?
  formid       String?
  utm_medium   String?
  utm_campaign String?
  utm_content  String?
  utm_term     String?
  sendCrm      Boolean
  answers      String?
  managerId    String?

  intrumId    String?
  intrumUrl   String?
  timeCall    String?
  ok_cz       Boolean? @default(false)
  timeManager String?
  ok_manager  Boolean? @default(false)
  status      String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sales {
  id                    String  @id @default(cuid())
  idSalesIntrum         String  @unique
  responsibleMain       String //Главный отвественный 
  partCommissionSeller  String //Часть комиссии, которую отдаем с комиссии продавца 1383
  sumCommissionBuyer    String //Сумма которую отдаем с комиссии покупателя 3187
  //агент продавца 1
  agentSellerName       String? //Агент продавца  3190
  agentSellerCommission String? //Комиссия продавца 3364
  //Эл_комис
  lawyerName            String? //3096
  lawyerCommission      String? //Комиссия юриста СД 4616
  //Агент покупателя
  agentBuyerName        String? // Агент покупателя 3350
  agentBuyerCommission  String? //Коммиссия  покупателя  3365
  //Юрист
  lawyerCommission2     String? //Юрист Сумма к выдаче  3363

  adress    String? //1321
  dateStage String? //3415
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  id           String    @id @default(cuid())
  login        String    @unique
  passwordHash String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  sessions     Session[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime
  adminId      String
  admin        Admin    @relation(fields: [adminId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model constructionApplications {
  id                  String  @id @default(cuid())
  idApplicationIntrum String  @unique
  translator          String? //Источник
  responsibleMain     String //Главный отвественный 
  status              String? //статус
  postMeetingStage    String? //стадия после встречи
  desc                String? //описание
  typeApplication     String? //тип заявки
  contactedClient     String? //специалист связался с клиентом
  campaignUtm         String?
  termUtm             String?
  nextAction          String? //Дата следующего действия по заявки 

  rejection          String? //Отклонения работы с заявкой
  errorReejctionDone Boolean? // Ошибка исправлена?

  datecallCenter String? //Дата обработки заявки колл центром
  timecallCenter String? // Время обработки КЦ

  timesaletCenter String? // Дата обработки ОП

  dateFirstContact String? // Дата первого контакта

  phone String?
  url   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
