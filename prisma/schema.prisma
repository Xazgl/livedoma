// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ObjectIntrum {
  id                String   @id @default(cuid())
  id_intrum         String   @unique
  category          String // категория  - Квартиры, дома и тп 
  operationType     String // тип продам 
  state             String? // Область
  city              String? // Волгоград или Волжский
  street            String? // улица и номер дома 
  price             Float? // цена
  companyName       String //АН Живем дома или какая то другая 
  managerName       String?
  description       String? //Описание
  balconyOrLoggia   String? //Значение будет Балкон или Лоджия
  passengerElevator String? //Пассажирский лифт кол-во или нет
  freightElevator   String? //Грузовой лифт  кол-во или нет
  ceilingHeight     String? //ВЫсота потолков
  renovation        String? //Ремонт косметический или еще какой-то
  bathroomMulti     String? //Ванна раздельная с туалетом или нет
  dealType          String? //Тип сделки
  roomType          String[] //Тип комнат
  saleOptions       String[] //Опции продажи , например можно в Ипотеку
  phone             String? //Контактный телефон
  imgUrl            String[] //Фото квартиры с внешний источников
  img               String[] //Фото квартиры  скачен
  thubmnail         String[] //Превью квартиры  скачен
  rooms             String? //Кол-во комнат
  square            String? //Площадь
  landArea          String? //Земельный участок
  floors            String? //Этажей
  floor             String? // Этаж если квартира или офис
  wallsType         String? //тип стен дома
  propertyRights    String? //Право собственности 
  transactionType   String?
  objectType        String?

  //Если дом
  houseServices   String[] // отопления, газ и Электричество
  cadastralNumber String? // кадастровый номер

  //Для коммерческой

  parkingType         String?
  rentalType          String?
  decoration          String?
  leaseCommissionSize String?
  leaseDeposit        String?

  FavoriteObjectsToObj FavoriteObjectsToObj[]
  active               Boolean                @default(true)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
}

model SessionClient {
  id              String                 @id @default(cuid())
  sessionToken    String                 @unique
  expires         DateTime
  favoriteObjects FavoriteObjectsToObj[]
  createdAt       DateTime               @default(now())
  updatedAt       DateTime               @updatedAt
}

model FavoriteObjectsToObj {
  session   SessionClient @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId String
  object    ObjectIntrum  @relation(fields: [objectId], references: [id], onDelete: Cascade)
  objectId  String

  @@id([sessionId, objectId])
}

model ExchangeRate {
  id        String   @id @default(cuid())
  name      String
  value     String
  nominal   String
  charCode  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Wazzup {
  id        String  @id @default(cuid())
  name      String?
  phone     String
  text      String?
  typeSend  String?
  sendCrm   Boolean
  managerId String?

  intrumId    String?
  intrumUrl   String?
  timeCall    String?
  ok_cz       Boolean? @default(false)
  timeManager String?
  ok_manager  Boolean? @default(false)
  status      String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tilda {
  id           String  @id @default(cuid())
  name         String?
  phone        String
  typeSend     String?
  formid       String?
  utm_medium   String?
  utm_campaign String?
  utm_content  String?
  utm_term     String?
  sendCrm      Boolean
  answers      String?
  managerId    String?

  intrumId    String?
  intrumUrl   String?
  timeCall    String?
  ok_cz       Boolean? @default(false)
  timeManager String?
  ok_manager  Boolean? @default(false)
  status      String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sales {
  id                    String  @id @default(cuid())
  idSalesIntrum         String  @unique
  responsibleMain       String? //Главный отвественный 
  partCommissionSeller  String? //Часть комиссии, которую отдаем с комиссии продавца 1383
  sumCommissionBuyer    String? //Сумма которую отдаем с комиссии покупателя 3187
  //агент продавца 1
  agentSellerName       String? //Агент продавца  3190
  agentSellerFormula    String? //Формула Агент продовца 3333
  agentSellerCommission String? //Комиссия продавца 3364 или  Агент продавца сумма 1
  agentSellerSalaryDone String? //  Агент продавца выдана зп?  3335 
  //Эл_комис
  lawyerName            String? //3096
  lawyerCommission      String? //Комиссия юриста СД 4616
  //Агент покупателя
  agentBuyerName        String? // Агент покупателя 3350
  agentBuyerFormul      String? //Формула Агент покупателя 3337
  agentBuyerCommission  String? //Коммиссия  покупателя  3365 или Агент покупателя к выдаче1
  agentBuyerSalaryDone  String? //Агент покупателя была выдача?  3339  
  //Юрист
  lawyerCommission2     String? //Юрист Сумма к выдаче  3363
  lawyerSalary          String? //Юрист(зп) 3352
  lawyerFormula         String? //Формула Юрист 3329
  lawyerSumm            String? //Юрист к выдаче 3330
  lawyerSumm1           String? //Юрист к выдаче1 
  lawyerSalaryDone      String? //Юрист Выдана зп?  
  //Ипотека
  mortageFormula        String? //Формула  Ипотека 3359
  mortageSumm1          String? //Ипотека сумма 1  3367
  mortageOtdel          String? //Привлечение ипотечного отдела 1203

  adress    String? //1321
  dateStage String? //3415

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TransactionSellingInsurance {
  id                                   String    @id @default(cuid())
  idIntrum                             String    @unique
  responsibleMain                      String? //Главный отвественный 
  name                                 String? // ФИО 3313
  phone                                String? // номер 3314
  agreement                            String? // Подписание кредитного договора 3315
  titleBorrower                        String? // Титульный заемщик 3316
  profession                           String? // Профессия 3317
  bank                                 String? // банк 3318
  insuranceCompany                     String? // Страховая компания 3448
  insuranceSum                         String? //Сумма страховки 3449
  mortageSum                           String? //Сумма ипотеки 3319
  commission                           String? //Комиссия 3413
  lawler                               String? //Юрист 3320
  dateNextClientContact                DateTime? //Дата следующего контакта с клиентом 3321
  stageWorkWithClient                  String? //Этап работы с клиентом 3403
  nextAction                           String? //Следующее действие 3376
  dateBirthday                         DateTime? //Дата рождения 3324
  address                              String? //Адрес объекта 3325
  clientInform                         String? //Клиент проинформирован о возможности страхования 3326
  insuranceCalc                        String? //Расчет страховки 3374
  titleBorrowerPhone                   String? //Телефон Титульного заемщика 3375
  extractInsurance                     String? //Выписка 3378
  idTransitionSaleObject               String? //id сделки продажа объекта 3386
  numberCadastral                      String? //Кадастровый номер 3388
  extract                              String? //выписка 3394
  dateTheStatusChanged                 DateTime? //Дата перехода статуса в "Оплата прошла" 3398
  source                               String? // Источник 3402
  theBuyerIMMEDIATELYRefusedInsurance  String? //покупатель СРАЗУ отказался от страховки 3488
  transactionStageInTheTransactionSALE String? //Стадия сделки в сделке ПРОДАЖА ОБЪЕКТА и 3489
  createdAt                            DateTime  @default(now())
  updatedAt                            DateTime? @updatedAt
}

model Admin {
  id           String    @id @default(cuid())
  login        String    @unique
  passwordHash String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  sessions     Session[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime
  adminId      String
  admin        Admin    @relation(fields: [adminId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model constructionApplications {
  id                  String  @id @default(cuid())
  idApplicationIntrum String  @unique
  translator          String? //Источник
  responsibleMain     String //Главный отвественный 
  status              String? //статус
  postMeetingStage    String? //стадия после встречи
  desc                String? //описание
  typeApplication     String? //тип заявки
  contactedClient     String? //специалист связался с клиентом
  campaignUtm         String?
  termUtm             String?
  nextAction          String? //Дата следующего действия по заявки 

  rejection          String? //Отклонения работы с заявкой
  errorReejctionDone Boolean? // Ошибка исправлена?

  datecallCenter String? //Дата обработки заявки колл центром
  timecallCenter String? // Время обработки КЦ

  timesaletCenter String? // Дата обработки ОП

  dateFirstContact String? // Дата первого контакта

  phone   String?
  url     String?
  comment String[]

  createdAtCrm String?


  typeApplicationCrm String @default("ЖДД")// Тип заявки ЖДД или Сансара 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model InparseObjects {
  id          String   @id @default(cuid())
  idInparse   String   @unique
  regionId    String
  cityId      String
  typeAd      String?
  sectionId   String?
  categoryId  String
  title       String
  address      String
  floor       String?
  floors      String?
  sq          String?
  sqLand      String?
  price       String?
  description String?
  images      String[]
  lat         String
  lng         String
  name        String
  phones      String[]
  url         String
  agent       String?
  source      String?
  sourceId    String?

  // createdAt DateTime @default(now())
  // updatedAt DateTime @updatedAt
}
